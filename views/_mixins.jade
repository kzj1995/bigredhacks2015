//-
    Contains globally available utility functions

//-
    generate a list of HTML <option> items for a dropdown
    @param arr array to generate options on
    @param {object} options
                    options.selected: string corresponding to default value
    @returns {buffered html}
mixin generateOptions(arr, options)
    -
        var array = arr.slice(); //clone the array
        options = options || {};
        options.selected = options.selected || "";

    if array.length > 0
        each item in array
            - var selected = false;
            if (options.selected + "" === item + "")
                - selected = true;
            option(selected=selected, value=item) #{item}

//-
    generate <li><a href={url}>{name}</a></li>
    Used to generate the sidebars
    @param listItems array of {name,url}
    @param active url of active item
mixin generateUrlList(listItems, active)
    - active = active.split(/[?#]/)[0]; //remove query string, hash
    for item in listItems
        -
            if (item.hasOwnProperty("reg_open") && item.reg_open && !middle.helper.isResultsReleased()) break;
            if (item.hasOwnProperty("results_released") && item.results_released && !middle.helper.isResultsReleased()) break;
            var classes = [];
            if (active == item.url) classes.push("active");
        li: a(href=item.url,class=classes) #{item.name}

//-
    returns a self link to a url (href and text are the same)
    @param {string} url to display and link to
    @returns {buffered html}
mixin selflink(url)
    a(href="#{url}") #{url}